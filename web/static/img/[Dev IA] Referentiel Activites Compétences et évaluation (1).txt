Référentiels dactivités, de compétences et dévaluation Développeur en intelligence artificielle
REFERENTIEL DACTIVITES


REFERENTIEL DE COMPETENCES

REFERENTIEL DEVALUATION
Décrit les situations de travail et les
Identifie les compétences et les
Définit les critères et les modalités d'évaluation des acquis activités exercées, les métiers ou
connaissances, y compris transversales,
emplois visés
qui découlent du référentiel dactivités
MODALITES DEVALUATION
CRITÈRES D'ÉVALUATION
Bloc de compétences 1 : Réaliser la collecte, le stockage et la mise à disposition des données dun projet en intelligence artificielle C1. Automatiser lextraction de données
- La présentation du projet et de son
A1 : Programmer la col ecte de données
depuis un service web, une page web
E1. Mise en situation (C1, C2, C3,
contexte est complète : acteurs, objectifs
depuis plusieurs sources pour un projet
( scraping*), un fichier de données, une base C4, C5)
fonctionnels et techniques, environnements
en intel igence artificiel e
de données et un système big data* en
Lévaluation doit se faire dans un contexte
et contraintes techniques, budget,
programmant le script* adapté afin de organisation du travail et planification.

- Identification des contraintes
de réalisation dun service numérique réel
pérenniser la col ecte des données
techniques propres aux sources de
ou fictif basé sur lusage de données, à
nécessaires au projet.

- Les spécifications techniques précisent :
données (consulter la documentation, les
partir du cadrage pour la réalisation dun
les technologies et outils, les services
règles de confidentialité, etc.).

service numérique (spécifications
fonctionnel es et techniques par exemple).

externes, les exigences de programmation
(langages), laccessibilité (disponibilité,
- Rédaction des spécifications
Le projet évalué a pour but doptimiser,
accès).

techniques pour lextraction des
dautomatiser, de pérenniser et de mettre à
données.

disposition les flux de données et les
- Le périmètre des spécifications
données, utiles et nécessaires à la
techniques est complet : il couvre
Page 1 / 25

- Construction les requêtes HTTP pour la
réalisation du service numérique, par les
lensemble des moyens techniques à mettre
récupération des données depuis un
équipes techniques (par exemple en
en uvre pour lextraction et l'agrégation
service web (REST*).

analyse statistique, en business
des données en un jeu de données brutes
intel igence, en machine learning ou encore
final.

- Lecture dun fichier de données dans un
en intel igence artificiel e).

script (Python, R, etc.).

- Le script dextraction des données est
Livrable : rapport professionnel individuel
fonctionnel : toutes les données visées
- Téléchargement de lHTML dune ou
sont effectivement récupérées à lissue de
plusieurs pages web visées par une
Évaluation :
lexécution du script.

action de scraping.

- Correction du rapport professionnel
- Soutenance orale individuel e
- Le script comprend un point de lancement,
- Connexion programmatique (Python, R,
linitialisation des dépendances et des
etc.) à un système de gestion de base de
connexions externes, les règles logiques de
données et à un système big data (Hive,
traitement, la gestion des erreurs et des
Apache Impala, etc.).

exceptions, la fin du traitement et la
sauvegarde des résultats.

- Programmation des filtrages/parsing
des données utiles dans les résultats
- Le script dextraction des données est
obtenus depuis :
versionné* et accessible depuis un dépôt
- une API,
Git*.

- depuis la lecture dun ou de plusieurs
fichiers de données,
- Lextraction des données est faite depuis
- et depuis lHTML col ecté dun site
un mix entre au moins les sources
web ( scraping).

suivantes : un service web (API REST), un
fichier de données, un scraping, une base
- Exécution programmatique des
de données et un système big data.

requêtes dextraction de type SQL*.

- Exécution programmatique des
requêtes dextraction depuis un système
big data.

- Ecriture des requêtes dextraction de
C2. Développer des requêtes de type SQL
- Les requêtes de type SQL pour la col ecte
type SQL de récupération de données
dextraction des données depuis un système de données sont fonctionnel es : les
Page 2 / 25

stockées en base de données et depuis
de gestion de base de données et un système
données visées sont effectivement
un système big data (Hive, Spark, etc).

big data en appliquant le langage de requête
extraites suites à l'exécution des requêtes.

propre au système afin de préparer la col ecte
- Documentation des requêtes
des données nécessaires au projet.

- La documentation des requêtes met en
dextraction.

lumière choix de sélections, filtrages,
conditions, jointures, etc., en fonction des
objectifs de col ecte.

- La documentation explicite les
optimisations appliquées aux requêtes .

- Rédaction des spécifications
C3. Développer des règles d'agrégation de
- Le script dagrégation des données est
techniques pour l'agrégation des
données issues de différentes sources en fonctionnel : les données sont
données.

programmant, sous forme de script, la
effectivement agrégées, nettoyées et
suppression des entrées corrompues et en
normalisées en un seul jeu de données à
- Programmation des règles dagrégation
programmant lhomogénéisation des formats
lissue de lexécution du script.

des données col ectées depuis chaque
des données afin de préparer le stockage du
source en un jeu de données brutes
jeu de données final.

- Le script dagrégation des données est
unique.

versionné et accessible depuis un dépôt
Git.

- Programmation de lidentification des
entrées corrompues dans le jeu de
- La documentation du script dagrégation
données (par exemple, données
est complète : dépendances, commandes,
partiel es et/ou manquantes).

les enchaînements logiques de lalgorithme,
les choix de nettoyage et
- Programmation de la suppression des
dhomogénéisation des formats données.

entrées corrompues.

- Programmation de lidentification des
entrées au format non normalisé.

- Programmation de la lhomogénéisation
des formats de données (par exemple,
format des dates, des unités, etc.).

Page 3 / 25

- Versionnement* des scripts avec Git et
un dépôt Git en ligne.

- Documentation des scripts.

A2 : Développer la mise à disposition
C4. Créer une base de données dans le
- Les modélisations des données
technique des données col ectées pour
respect du RGPD en élaborant les modèles
respectent la méthode et le formalisme
un projet dintel igence artificiel e
conceptuels et physiques des données à
Merise.

partir des données préparées et en
- Rédaction des spécifications
programmant leur import afin de stocker le jeu
- Le modèle physique des données est
techniques pour le stockage des
de données du projet.

fonctionnel : il est intégré avec succès lors
données.

de la création de la base de données, sans
erreur.

- Modélisation de la structure des
données de la base de données selon la
- La base de données est choisie au regard
méthode Merise*.

de la modélisation des données et des
contraintes du projet.

- Choix du système de gestion de base
de données.

- La reproduction des procédures
dinstal ation décrites (base de données et
- Création de la base de données dans le
API) a pour résultat un système conforme
système de gestion de base de données.

aux objets techniques attendus..

- Documentation de la procédure
- Le script dimport fourni est fonctionnel : il dinstal ation du système de gestion de
permet linsertion des données dans le
base de données.

système mis en place.

- Rédaction ou mise à jour du registre
- La documentation technique du script
des traitements de données personnel es
dimport est versionné à la racine du même
en vue de la mise en conformité de la
dépôt Git que celui utilisé pour le script
base de données avec le RGPD.

dimport.

- Rédaction des procédures de tri des
- Les documentations techniques des script
Page 4 / 25

données personnel es stockées dans la
couvrent les parties suivantes :
base de données pour la mise en
- les dépendances nécessaires pour la
conformité avec le RGPD (par exemple :
réutilisation ds scripts (langages,
détection et suppression des données
dépendances externes, etc)
personnel es inutiles, trop anciennes,
- les commandes pour lexécution des
etc.).

scripts.

- Programmation du script dimport des
- Le registre des traitements de données
données en base de données.

personnel es intègre lensemble des
traitements de données personnel es
- Documentation du script dimport.

impliqués dans la base de données.

- Les procédures de tri des données
personnel es pour la mise en conformité de
la base de données avec le RGPD sont
rédigées.

- Les procédures de tri détail ent les
traitements de conformité (automatisés ou
non) à appliquer ainsi que leur fréquence
dexécution.

- Rédaction des spécifications
C5. Développer une API mettant à disposition
- La documentation technique de lAPI
techniques des moyens de mise à
le jeu de données en utilisant larchitecture (REST) couvre tous les points de
disposition et daccès aux données du
REST afin de permettre lexploitation du jeu de terminaisons.

projet : API (REST) et accès direct à la
données par les autres composants du projet.

base de données.

- La documentation technique couvre les
règles dauthentification et/ou
- Configuration des accès au jeu de
dautorisation de lAPI.

données depuis le serveur de lAPI.

- La documentation technique respecte les
- Développement de la réception et de la
standards du modèle choisi (par exemple
validation des requêtes client (web,
OpenAPI*).

mobile)
Page 5 / 25

- LAPI REST est fonctionnel e pour laccès
- Développement des requêtes à la base
aux données du projet : el e restreint par
de données en fonction de la mise à
une autorisation (ou authentification)
disposition des données prévues par les
l'accès aux données,
spécifications.

- LAPI REST est fonctionnel e pour la mise à
- Développement des réponses de lAPI
disposition : el e permet la récupération de
au client.

lensemble des données nécessaires au
projet, comme prévu selon les
- Développement des règles
spécifications données.

d'autorisation et daccès aux points de
terminaison de lAPI REST.

- Sécurisation de lAPI : Top 10 OWASP
API1 par exemple.

- Rédaction de la documentation
technique de lAPI REST.

- Rédaction de la documentation
technique daccès à la base de données
adaptée aux environnements techniques
du projet.

Bloc de compétences 2 : Intégrer des modèles et des services dintelligence artificielle A3. Accompagner le choix et lintégration
C6. Organiser et réaliser une veille technique
- La thématique de veil e choisie porte sur
E2. Cas pratique (C6, C7, C8)
dun service dintel igence artificiel e
et réglementaire en animant le travail col ectif un outil et/ou une réglementation
préexistant
de sélection des sources, de col ecte, de
Lévaluation doit se faire à partir de
mobilisée dans la mise en situation.

traitement et de partage des informations afin lexpression dun besoin réel ou fictif de
1 https://raw.githubusercontent.com/OWASP/API-Security/master/2019/en/dist/owasp-api-security-top-10.pdf
Page 6 / 25

- Définition de la ou des thématiques de
de formuler des recommandations pour le
fonctionnalités dintel igence artificiel e. Ce
- Les temps de veil e sont planifiés
veil e.

projet toujours en phase avec létat de lart.

besoin peut résulter dune commande
régulièrement (à minima une récurrence
client comme dune sol icitation interne
dune heure hebdomadaire).

- Planification des temps dédiés à la
dun col aborateur data scientist par
veil e.

exemple.

- Le choix des outils dagrégation est
cohérent avec les sources dinformations
Le cas pratique évalué a pour but
- Choix dun outil d'agrégation des flux
visées et le budget disponible (flux RSS,
linstal ation et la configuration du service
dinformations et dactualités.

flux réseaux sociaux, agrégation newsletter,
dintel igence artificiel e préconisé.

etc)
- Choix dun outil de partage ou
communication des synthèses des
Livrable : rapport professionnel individuel
- Les synthèses sont communiqués aux
informations col ectées.

parties prenantes dans un format qui
Évaluation :
respecte les recommandations
- Identification des sources et des flux
- Correction du rapport professionnel
daccessibilité (par exemples cel es de
dinformations utiles à la veil e
- Soutenance orale individuel e
lassociation Valentin Haüy2ou de Atalan -
thématique visée (dont accessibilité,
AcceDe3).

sécurité, gestion des données)
- Les informations partagées dans la
- Qualification de la fiabilité des sources
synthèse répondent à la thématique de
et des flux identifiés.

veil e choisie.

- Configuration des outils dagrégation
- Les sources et flux identifiés répondent
selon les flux et sources et la ou les
aux critères de fiabilité :
thématiques de veil e.

-
Lauteur de la page est identifié
-
Des informations sur lauteur sont
- Rédaction des synthèses des
disponibles et confirment ses
informations col ectées.

compétences, sa notoriété et
labsence dintérêts personnels
- Communications des synthèses aux
-
lanalyse du contenu est valable
parties prenantes du projet et aux
(date de publication récente,
éventuels intéressés (à interval es
sources de l'information
2 https://www.avh.asso.fr/fr/favoriser-laccessibilite/accessibilite-numerique/accessibilite-des-documents-et-des-courriels-0
3 https://www.accede-web.com/wp-content/uploads/accessibility-guidelines-editors-template.pdf
Page 7 / 25

réguliers ou à lopportunité par exemple).

indiquées, niveau de langue
correct),
-
la source (site) ou le document
est structuré
-
les sources (sites) ou documents
respectant les normes
d'accessibilités sont privilégiés.

-
linformation peut être confirmée
par dautres sites de confiance
- Définition de la problématique
C7. Identifier des services dintelligence
- Lexpression de besoin est reformulée et
technique et fonctionnel e dintel igence
artificielle préexistants à partir de
présente les objectifs et les contraintes du
artificiel e à adresser à partir de
lexpression de besoin en fonctionnalités
projet dintégration dune solution
lexpression de besoin.

dintel igence artificiel e, en réalisant un
dintel igence artificiel e.

benchmark de services existants et en analysant leurs caractéristiques pour
- Le benchmark liste les services étudiés et
- Identification des contraintes de
formaliser une ou plusieurs recommandations
les services non étudiés.

moyens, techniques et opérationnel es
de services adaptés au besoin.

liées au contexte du projet.

- Les raisons pour écarter un service sont
explicitées.

- Benchmark des outils et services
- Le benchmark détail e le niveau
dintel igence artificiel e accessibles et
dadéquation du service étudié pour chaque
répondant au problème visé.

ensemble fonctionnel souhaité par le
commanditaire.

- Rédaction des conclusions préconisant
un ou plusieurs services dintel igence
- Le benchmark détail e le niveau de la artificiel e.

démarche éco-responsable du service
étudié, en fonction des informations
disponibles.

- Le benchmark détail e les principales contraintes techniques et les pré-requis
pour chaque solution.

Page 8 / 25

- Les conclusions délimitent clairement les
services répondant aux besoins, avec leurs
avantages et leurs inconvénients, des
services ne couvrant pas les besoins du
commanditaire.

- Création de lenvironnement d'exécution
C8. Paramétrer un service dintelligence
- Le service instal é est accessible, avec
du service (compte SaaS*, VPS*, sur-site,
artificielle en suivant sa documentation une éventuel e authentification.

etc).

technique et en respectant les spécifications
du projet, afin de permettre lintégration des
- Le service est configuré correctement, il
connecteurs du service dans le système
- Instal ation et configuration des
dinformation.

répond aux besoins fonctionnels et aux
éventuel es dépendances (sdk, outils,
contraintes techniques du projet.

autre service SaaS, etc).

- Le monitorage disponible du service est
- Création des accès à lenvironnement
opérationnel.

dexécution et de configuration du
service (comptes, groupes dutilisateurs,
- La documentation couvre la gestion des
droits, etc).

ccès à la solution, les procédures
dinstal ation et de test, les éventuel es
dépendances et interconnexions avec
- Instal ation et configuration des outils
dautres solutions, les données impliquées
de monitorage disponibles avec le
dans lutilisation de la solution.

service intégré.

- La documentation est communiquée aux
- Rédaction de la documentation.

parties prenantes dans un format qui
respecte les recommandations
daccessibilité (par exemples cel es de
lassociation Valentin Haüy4ou de Atalan -
4 https://www.avh.asso.fr/fr/favoriser-laccessibilite/accessibilite-numerique/accessibilite-des-documents-et-des-courriels-0
Page 9 / 25

AcceDe5).

A4. Réaliser lintégration dun modèle ou
C9. Développer une API exposant un modèle
- LAPI restreint laccès au modèle
dun service dintel igence artificiel e
dintelligence artificielle en utilisant E3. Mise en situation (C9, C10,
dintel igence artificiel e avec un moyen
larchitecture REST pour permettre
C11, C12, C13)
dauthentification.

- Analyse des spécifications
linteraction entre le modèle et les autres
Lévaluation doit se faire dans un contexte
fonctionnel es et techniques fournies par
composants du projet.

réel ou fictif de réalisation dun service
- LAPI permet laccès aux fonctions du
le commanditaire interne ou externe.

dintel igence artificiel e à partir dun
modèle, comme attendu selon les
modèle fourni.

spécifications.

- Conception de larchitecture de lAPI :
les points de terminaison ; les règles
Le projet évalué a pour but la mise en
- Les recommandations de sécurisation
daccès, etc.

service ( packaging*, monitorage, test) du dune API du top 10 OWASP sont intégrées
modèle fourni, et son intégration dans une
quand nécessaires.

- Choix des outils et langages de
application existante.

programmation pour le développement
- Les sources sont versionnées et
de lAPI.

Livrable : rapport professionnel individuel
accessibles depuis un dépôt Git distant.

- Instal ation et configuration de
Évaluation :
- Les tests couvrent tous les points de
lenvironnement de développement.

- Correction du rapport professionnel
terminaison dans le respect des
- Soutenance orale individuel e intégrant
spécifications.

- Développement de la vérification et de
une démonstration du projet.

l'éventuel e transformation des
- Les tests sexécutent sans bug.

paramètres envoyés par le client (web,
mobile) au format attendu par le
- Les résultats des tests sont correctement
modèle.

interprétés.

- Développement de lexécution du
- La documentation couvre larchitecture et
modèle à partir de la requête client.

tous les points de terminaisons de lAPI.

- Développement de la réponse de lAPI
- La documentation couvre les règles
au client avec le résultat de lexécution
dauthentification et/ou dautorisation
du modèle.

daccès à lAPI.

5 https://www.accede-web.com/wp-content/uploads/accessibility-guidelines-editors-template.pdf
Page 10 / 25

- Développement des règles
- La documentation et lAPI respectent les
d'autorisation et daccès aux points de
standards dun modèle choisi (par exemple
terminaison de lAPI.

Open API*).

- Sécurisation de lAPI : Top 10 OWASP
- La documentation est communiquée dans
API6 par exemple.

un format qui respecte les
recommandations daccessibilité (par
- Développement des tests dintégration
exemple cel es de lassociation Valentin
validant le bon fonctionnement des
Haüy ou de Microsoft).

points de terminaison de lAPI
développée.

- Versionnement des sources avec Git, et
depuis un dépôt distant.

- Rédaction et/ou génération de la
documentation de lAPI.

- Instal ation de lenvironnement de
C10. Intégrer lAPI dun modèle ou dun
- Lapplication de départ est instal ée et
développement de lapplication.

service dintelligence artificielle dans une fonctionnel e en environnement de
application, en respectant les spécifications
développement.

- Programmation des éventuel es étapes
du projet et les normes daccessibilité en
vigueur, à laide de la documentation
- La communication avec lAPI depuis
dauthentification ou d'autorisation avec
technique de lAPI, afin de créer les
lapplication fonctionne.

lAPI.

fonctionnalités dintel igence artificiel e de lapplication.

- Les éventuel es étapes dauthentification
- Programmation de la communication
et de renouvel ement de lauthentification
avec les points de terminaison de lAPI
(expiration des jetons par exemple) sont
du modèle ou du service dintel igence
intégrées correctement en suivant la
documentation de lAPI.

artificiel e.

6 https://raw.githubusercontent.com/OWASP/API-Security/master/2019/en/dist/owasp-api-security-top-10.pdf
Page 11 / 25

- Tous les points de terminaison de lAPI
- Intégration des éventuel es adaptations
concernés par le projet sont intégrés à
dinterface du à lintégration de
lapplication selon les spécifications
lintel igence artificiel e.

fonctionnel es et techniques.

- Les adaptations dinterfaces nécessaires
- Test et validation, en fonction des
et en accord avec les spécifications sont
enjeux, du niveau daccessibilité des
intégrées à lapplication.

interfaces modifiées.

- Les tests dintégration couvrent tous les
- Développement des tests dintégration
points de terminaison exploités.

sur le périmètre de lAPI exploité.

- Les tests sexécutent en totalité : il ny a pas de bug dans les programmes des tests
- Versionnement des sources avec Git et
en eux-mêmes.

sur le dépôt de lapplication.

- Les résultats des tests sont correctement
interprétés.

- Les sources sont versionnées et
accessibles depuis le dépôt Git de
lapplication.

A5. Faciliter le déploiement dun modèle
C11. Monitorer un modèle dintelligence
- Les métriques faisant lobjet du
dintel igence artificiel e avec une
artificielle à partir des métriques courantes et monitorage du modèle sont expliquées
approche MLOps
spécifiques au projet, en intégrant les outils sans erreur dinterprétation.

de col ecte, dalerte et de restitution des
données du monitorage pour permettre
- Liste des métriques du modèle à
lamélioration du modèle de façon itérative.

- Le ou les outils pour lintégration du
monitorer et des éventuels déclencheurs
monitorage du modèle sont adaptés au
pour le réentraînement, à laide des
contexte et aux contraintes techniques du
équipes de data analyse et de data
projet.

science : stabilité des données,
Page 12 / 25

performance du modèle dintel igence
- Au moins un vecteur de restitution des
artificiel e, bonne santé du système, etc.

métriques évaluées, en temps réel, est
proposé ( dashboard, feuil e de calcul, etc).

- Choix dune solution ou dun outil pour
le monitorage du modèle dintel igence
- Les enjeux daccessibilité, pour toutes les
artificiel e et pour la consolidation des
parties prenantes du projet, sont pris en
indicateurs.

compte lors de la sélection de loutil de
restitution.

- Intégration de la solution ou de loutil de
monitorage du modèle :
- La chaîne de monitorage est dabord
-
intégration des col ecteurs.

testée dans un bac à sable ou
-
intégration des éventuels
environnement de test dédié.

déclencheurs (pour
l'entraînement continu).

- La chaîne de monitorage est en état de
marche. Les métriques visées sont
- Sélection dun outil de restitution des
effectivement évaluées et restituées.

métriques de surveil ance du modèle
(Grafana, Dash, Kibana).

- Les sources sont versionnées et
accessibles depuis un dépôt Git distant.

- Intégration de loutil de restitution et
intégration des éventuel es alertes
- La documentation technique de la chaîne
(notifications, e-mails, etc).

de monitorage couvre la procédure
dinstal ation de la chaîne, de
configurations, et dutilisation du
- Test et validation du bon
monitorage à destination des équipes
fonctionnement de toute la chaîne de
techniques.

monitorage.

- La documentation est communiquée dans
- Versionnement des sources avec Git et
un format qui respecte les
sur un dépôt distant.

recommandations daccessibilité (par
exemple cel es de lassociation Valentin
Page 13 / 25

Haüy ou de Microsoft).

- Rédaction de la documentation
technique des procédures dinstal ation,
d maintenance du monitorage du
modèle.

- Rédaction de la documentation
utilisateur, pour lutilisation du
monitorage.

- Définition, avec les équipes
C12. Programmer les tests automatisés dun
- Lensemble des cas à tester sont listés et
responsables du développement du
modèle dintelligence artificielle en
définis : la partie du modèle visée par le
modèle, du périmètre des tests pour
définissant les règles de validation des jeux de test, le périmètre du test et la stratégie de
chaque composante du modèle : format
données, des étapes de préparation des
test.

données, d'entraînement, dévaluation et de
des données, complétude et label isation
validation du modèle pour permettre son
- Les outils de test (framework,
des données, phase d'entraînement,
intégration en continu et garantir un niveau de bibliothèque, etc.) choisis sont cohérent
phase de validation du modèle, etc.

qualité élevé.

avec lenvironnement technique du projet.

- Les tests sont intégrés et respectent la
- Choix des outils de test (unittest par
couverture souhaitée établie.

exemple.)

- Les tests s'exécutent sans problème
technique en environnement de test.

- Instal ation et configuration de
lenvironnement dexécution des tests.

- Les sources sont versionnées et
accessibles depuis un dépôt Git distant
(DVC, Gitlab).

- Intégration des tests : assertions,
mocks*, fixtures*
- La documentation couvre la procédure
dinstal ation de lenvironnement de test, les dépendances instal ées, la procédure
dexécution des tests et de calcul de la
couverture.

Page 14 / 25

- Versionnement des sources et si
- La documentation est communiquée dans
possible des données, avec sur un dépôt
un format qui respecte les
Git distant (DVC, Gitlab).

recommandations daccessibilité (par
exemple cel es de lassociation Valentin
- Rédaction de documentation technique
Haüy ou de Microsoft).

pour la configuration de lenvironnement
et pour l'exécution des tests.

- Définition des étapes, tâches et
C13. Créer une chaîne de livraison continue
- La documentation pour lutilisation de la
déclencheurs de la chaîne de livraison
dun modèle dintelligence artificielle en chaîne couvre toutes les étapes, les tâches
continue. Par exemple : réentrainement,
instal ant les outils et en appliquant les
et tous les déclencheurs disponibles.

exécution des tests, livraison en
configuration souhaitées, dans le respect du
cadre imposé par le projet et dans une
environnement de pré-production.

approche MLOps*, pour automatiser les
- Les déclencheurs sont intégrés comme
étapes de validation, de test, de packaging* et préalablement définis.

- Paramétrage dune chaîne de livraison
de déploiement du modèle.

continue : variables denvironnement,
- Le ou les fichiers de configuration de la
versions des environnements et
chaîne sont correctement reconnus et
dépendances, déclencheurs, etc.

exécutés par le système selon les
déclencheurs configurés.

- Intégration de lexécution des tests du
modèle et des données.

- Létape de test des données est intégrée à
la chaîne et sexécute sans erreur.

- Intégration des étapes d'entraînement
et dévaluation du modèle dintel igence
- La ou les étapes de test, d'entraînement et
artificiel e.

de validation du modèle sont intégrées à la
chaîne et s'exécutent sans erreur.

- Intégration de la génération des
- Les sources de la chaîne sont versionnées
éventuels rapports des résultats obtenus
et accessibles depuis le dépôt Git distant
du projet.

Page 15 / 25

lors de lévaluation du modèle
( accuracy*, confusion matrix*).

- La documentation de la chaîne de
livraison continue couvre la procédure
- intégration de létape de livraison (sous
dinstal ation, de configuration et de test de forme de pul request* par exemple),
la chaîne.

avec le ou les rapports dévaluation du
modèle attachés à la livraison.

- La documentation est communiquée dans
un format qui respecte les
- Les sources de la chaîne (fichiers de
recommandations daccessibilité (par
configuration par exemple) sont
exemple cel es de lassociation Valentin
versionnées et accessibles depuis le
Haüy ou de Microsoft).

dépôt Git du projet (DVC, Gitlab).

- Documentation des procédures
dinstal ation et de test de la chaîne.

- Documentation utilisateur, pour le
déclenchement de la chaîne.

Bloc de compétences 3 : Réaliser une application intégrant un service dintelligence artificielle A6. Concevoir une application intégrant
C14. Analyser le besoin dapplication dun
- La modélisation des données respecte un
E4. Mise en situation (C14, C15,
un service dintel igence artificiel e
commanditaire intégrant un service
formalisme : Merise, entités-relations, etc.

d'intelligence artificielle, en rédigeant les C16, C17, C18, C19)
- Modélisation des données de
spécifications fonctionnel es et en le
Lévaluation doit se faire dans un contexte
- La modélisation des parcours utilisateurs
lapplication (par exemple,
modélisant, dans le respect des standards
réel ou fictif de développement dune
respecte un formalisme : schéma
entités-relations, MCD/MPD, etc).

dutilisabilité et daccessibilité, afin détablir application intégrant un service
fonctionnel, wireframes, etc.

avec précision les objectifs de développement
dintel igence artificiel e.

- Modélisation des parcours utilisateurs
correspondant au besoin et à la faisabilité
- Chaque spécification fonctionnel e couvre
Le projet évalué a pour but danalyser un
(schéma fonctionnel, story board, etc).

technique.

le contexte, les scénarios dutilisation et les besoin en développement dapplication
critères de validation.

Page 16 / 25

- Rédaction des spécifications
dintel igence artificiel e, de concevoir,
fonctionnel es sous forme de user story.

développer, tester et enfin livrer
- Les objectifs daccessibilités sont
lapplication.

directement intégrés aux critères
- Définition des objectifs techniques
dacceptation des user stories.

daccessibilité des interfaces.

Livrable : rapport professionnel individuel
- Les objectifs daccessibilité sont formulés
Évaluation :
en sappuyant sur un des standards
- Correction du rapport professionnel
d'accessibilité : WCAG, RG2AA, etc.

- Soutenance orale individuel e intégrant
- Conception de larchitecture de
C15. Concevoir le cadre technique dune
une démonstration du projet.

- Les spécifications techniques rédigées
lapplication (n-tiers*, serverless*,
application intégrant un service dintelligence couvrent larchitecture de lapplication, ses
micro-service*, model-vue-control er*, ).

artificielle, à partir de l'analyse du besoin, en dépendances et son environnement
E5. Cas pratique (C20, C21)
spécifiant larchitecture technique et
dexécution (langage de programmation,
applicative et en préconisant les outils et
Lévaluation doit se faire à partir dune
framework, outils, etc).

- Choix des langages de programmation
méthodes de développement, pour permettre
application existante présentant au moins
et des outils pour lenvironnement de
le développement du projet.

une erreur technique, en contexte réel ou
- Les éventuels services (PaaS, SaaS, etc)
développement (Python, Java, Node.js,
fictif.

et prestataires ayant une démarche
React, Dash, Github...).

Le cas pratique évalué a pour but la mise
éco-responsable sont favorisés lors des
en place du monitorage applicatif et de la
choix techniques.

- Identification des flux de données et
résolution dun incident technique dans
des zones de stockage : base de
lapplication.

- Les flux de données impliqués dans
données des données de lapplication,
lapplication sont représentés par un
fichiers de données issus de la
Livrable : documentation technique du
diagramme de flux de données.

journalisation, etc.

monitorage. Documentation de la
résolution de lincident technique.

- La preuve de concept est accessible et
fonctionnel e en environnement de
- Choix des éventuels services externes
Évaluation :
pré-production.

complémentaires (par exemple : BaaS*,
- Correction de la documentation
paiements, cartographie, etc.)

- Soutenance orale individuel e présentant
- La conclusion à lissue de la preuve de
le monitorage de lapplication et la solutio
concept donne un avis précis permettant
- Rédaction des spécifications
implémentée en réponse à lincident
une prise de décision sur la poursuite du
techniques.

technique traité.

projet.

Page 17 / 25

A7. Développer les interfaces et les
C16. Coordonner la réalisation technique
- Les cycles, les étapes de chaque cycle, les
fonctionnalités dune application
dune application dintelligence artificielle en rôles, les rituels et les outils de la méthode dintel igence artificiel e
sintégrant dans une conduite agile de projet
agile appliquée sont respectés dans sa
et un contexte MLOps et en facilitant les
mise en place et tout au long du projet.

- Mise en place des outils et des
temps de col aboration dans le but datteindre supports de pilotage de la production
les objectifs de production et de qualité.

- Les outils de pilotage (tableau kanban,
technique, selon la méthode agile
burndown chart, backlog, etc.) sont
retenue (SCRUM, Shape up, etc.)

disponibles dans les conditions prévues par
la méthode appliquée.

- Facilitation des rituels agiles et du
respect du cadre des rituels.

- Les objectifs et les modalités des rituels
sont partagés à toutes les parties
- Communication de lavancement des
prenantes et rappeler si besoin.

productions techniques.

- Les éléments de pilotage sont rendus
- Communication des imprévus et des
accessibles à toutes les parties du projet et
changements.

ce tout au long du projet, en accord avec
les recommandations de la méthode de
gestion de projet appliquée.

- Instal ation de lenvironnement de
C17. Développer les composants techniques
- Lenvironnement de développement instal é
développement du projet.

et les interfaces dune application en utilisant respecte les spécifications techniques du
les outils et langages de programmation
projet.

- Intégration de la mise en page visée
adaptés et en respectant les spécifications
fonctionnel es et techniques, les standards et
- Les interfaces sont intégrées et respectent
selon les maquettes graphiques.

normes daccessibilité, de sécurité et de
les maquettes.

gestion des données en vigueur dans le but de
- Intégration des contenus des interfaces
- Les comportements des composants
répondre aux besoins fonctionnels identifiés.

dinterface (validation formulaire,
(textes, images, mise en page, ).

animations, etc.) et la navigation respectent
les spécifications fonctionnel es.

- Développement des fonctionnalités
- Les composants métier sont développés et
front-end (par exemple des animations, fonctionnent comme prévu par les
validations, interactions avec des APIs et
spécifications techniques et fonctionnel es.

services tiers.

Page 18 / 25

- La gestion des droits daccès à
- Développement des composants métiers
lapplication ou à certains espaces de
(calculs spécifiques, fonctionnalités,
lapplication est développée et respecte les
email, ).

spécifications fonctionnel es.

- Les flux de données sont intégrés dans le
- Gestion des droits et des accès à
respect des spécifications techniques et
lapplication (authentification,
fonctionnel es.

permissions, groupes, ).

- Les développements sont réalisés dans le
respect des bonnes pratiques
- Intégration des composants daccès aux
déco-conception dune application (Les
données.

recommandations déco-index ou Green IT
par exemple)
- Sécurisation de lapplication (top 10
- Les préconisations du top 10 dOWASP
OWASP).

sont implémentées dans lapplication quand
nécessaire.

- Intégration de tests automatisés (par
- Des tests dintégration ou unitaires
exemple unitaires, fonctionnels, ).

couvrent au moins les composants métier et
la gestion des accès.

- Versionnement des sources avec Git et
- Les sources sont versionnées et
sur un dépôt distant.

accessibles depuis un dépôt Git distant.

- La documentation technique couvre
- Les enjeux daccessibilité sont pris en
linstal ation de lenvironnement de
compte lors du développement de
développement, larchitecture applicative,
lapplication, et notamment des
les dépendances, lexécution des tests.

interfaces.

- La documentation est communiquée dans
un format qui respecte les
- Rédaction de la documentation
recommandations daccessibilité (par
technique.

exemple cel es de lassociation Valentin
Haüy ou de Microsoft).

Page 19 / 25

A8. Développer les fonctions de tests et
C18. Automatiser les phases de tests du
de contrôle dune application
code source lors du versionnement des
- La documentation pour lutilisation de la
dintel igence artificiel e
sources à laide dun outil dintégration
chaîne couvre les outils, toutes les étapes,
continue* de manière à garantir la qualité
les tâches et tous les déclencheurs de la
- Choix de loutil dintégration continue.

technique des réalisations.

chaîne.

- Un outil de configuration et d'exécution
- Définition des étapes, tâches et
dune chaîne dintégration continue est
déclencheurs de la chaîne dintégration
sélectionné de façon cohérente avec
continue.

lenvironnement technique du projet.

- Production des fichiers de configuration
- La chaîne intègre toutes les étapes
de la chaîne.

nécessaires et préalables à l'exécution des
tests de lapplication (build,
- Configuration de lautomatisation :
configurations).

déclencheurs, variables denvironnement,
- La chaîne exécute les tests de
dépendances, commandes à exécuter,
lapplication disponibles lors de son
etc.

déclenchement.

- Test et validation du bon
- Les configuration sont versionnées avec
fonctionnement de la chaîne.

les sources du projet dapplication, sur un
dépôt Git distant.

- Versionnement des sources pour la
configuration de la chaîne.

- La documentation de la chaîne
dintégration continue couvre la procédure
- Documentation des procédures
dinstal ation, de configuration et de test de dinstal ation et de test de la chaîne.

la chaîne.

- Documentation utilisateur, pour le
- La documentation est communiquée dans
déclenchement de la chaîne.

un format qui respecte les
recommandations daccessibilité (par
exemple cel es de lassociation Valentin
Haüy ou de Microsoft).

Page 20 / 25

- Définition des étapes, tâches et
C19. Créer un processus de livraison
- La documentation pour lutilisation de la
déclencheurs de la chaîne de livraison
continue dune application en sappuyant sur chaîne couvre toutes les étapes de la
continue.

une chaîne dintégration continue et en
chaîne, les tâches et tous les déclencheurs
paramétrant les outils dautomatisation et les disponibles.

environnements de test afin de permettre une
- Paramétrage dune chaîne de livraison
restitution optimale de lapplication.

continue : variables denvironnement,
- Le ou les fichiers de configuration de la
versions des environnements et
chaîne sont correctement reconnus et
dépendances, déclencheurs, etc.

exécutés par le système.

- La ou les étapes de packaging
- Configuration des étapes automatisées
(compilation, minification, build de
( build, pul request, etc.) de la chaîne de containers, etc.) de lapplication sont
livraison continue à partir de la chaîne
intégrées à la chaîne et s'exécutent sans
dintégration continue.

erreur.

- Versionnement des configurations de la
- Létape de livraison ( pul request par chaîne de livraison continue depuis le Git
exemple) est intégrée et exécutée une fois
du projet.

la ou les étapes de packaging validées.

- Test la chaîne de livraison continue.

- Les sources de la chaîne sont versionnées
et accessibles depuis le dépôt Git distant
- Documentation de la procédure de
du projet dapplication.

livraison continue : outils, configurations,
- La documentation de la chaîne de
exécution, débug.

livraison continue couvre la procédure
dinstal ation, de configuration et de test de la chaîne.

- La documentation est communiquée dans
un format qui respecte les
recommandations daccessibilité (par
exemple cel es de lassociation Valentin
Page 21 / 25

Haüy ou de Microsoft).

A9. Assurer le maintien en condition
C20. Surveiller une application dintelligence
- La documentation liste les métriques et
opérationnel e dune application
artificielle, en mobilisant des techniques de les seuils et valeurs dalerte por chaque
dintel igence artificiel e
monitorage et de journalisation, dans le
métrique à risque.

respect des normes de gestion des données
- Définition des métriques pour le
personnel es en vigueur, afin dalimenter la
- La documentation explicite les arguments
monitorage de lapplication.

feedback loop* dans une approche MLOps, et en faveur des choix techniques pour
de permettre la détection automatique
loutil age du monitorage de lapplication.

dincidents.

- Définition des seuils ou des valeurs
- Les outils (col ecteurs, journalisation,
devant générer une alerte.

agrégateurs, filtres, dashboard, etc.) sont
instal és et opérationnels à minima en
environnement local.

- Choix dune solution ou dun outil pour
la consolidation et le suivi des
- Les règles de journalisation sont intégrées
indicateurs de monitorage.

aux sources de lapplication, en fonction
des métriques à surveil er.

- Configuration de loutil ou de la solution
- Les alertes sont configurées et en état de
de monitorage.

marche, en fonction des seuils
préalablement définis.

- Intégration de la journalisation
- La documentation couvre la procédure
nécessaire aux objectifs de monitorage,
dinstal ation et de configuration des
dans lapplication.

dépendances pour loutil age du monitorage
de lapplication.

- Intégration dalertes (e-mail, push) en
- La documentation est communiquée dans
fonction des indicateurs.

un format qui respecte les
recommandations daccessibilité (par
- Documentation du monitorage et des
exemple cel es de lassociation Valentin
procédures dinstal ation et de
Haüy ou de Microsoft).

configuration de loutil age utilisé dans
Page 22 / 25

lenvironnement de lapplication.

- Analyse d'un message derreur, par
C21. Résoudre les incidents techniques en
- La ou les causes du problème sont
exemple en console ou depuis un fichier
apportant les modifications nécessaires au
identifiées correctement.

de journalisation.

code de lapplication et en documentant les
solutions pour en garantir le fonctionnement
- Le problème est reproduit en
- Recherche dune solution à laide de
opérationnel.

environnement de développement.

ressources externes : documentation,
- La procédure de débogage du code est
plateforme en ligne, etc.

documentée depuis loutil de de suivi.

- Test et validation dune solution.

- La solution documentée explicite chaque
étape de la résolution et de son
- Versionnement de la solution depuis le
implémentation.

dépôt Git du projet dapplication.

- La solution est versionnée dans le dépôt
- Documentation de lerreur et de la
Git du projet dapplication (par exemple
solution implémentée.

avec une merge request).

Glossaire :
 Scraping : cest une technique d'extraction du contenu de sites Web, via un script ou un programme, dans le but de le transformer pour permettre son utilisation dans un autre contexte comme l'enrichissement de bases de données, par exemple.

 Big data : des jeux de données plus variées, arrivant dans des volumes croissants et avec des flux dont la vitesse est élevée. Cest ce que lon appel e les trois « V
» : variété, volume, vitesse.

 Script : un programme dédié à une unique tâche, souvent dans le cadre dautomatisation.

 REST (API) : cest une architecture dAPI utilisée pour la création de services web (HTTP).

 SQL : cest un langage informatique servant à exploiter des bases de données relationnel es. Il est également à la base de multiples adaptations, formant une famil e de dérivées propre à des systèmes de stockage dont les besoins en requêtage sortent du cadre initialement prévu par SQL.

Page 23 / 25

 Dépôt Git : Cest un entrepôt virtuel dun projet en développement informatique. Cest lendroit où sont stockées les versions dun logiciel, de ses sources et dépendances (images, données, )
 Merise : La méthode Merise est une méthode d'analyse, de conception et de réalisation de systèmes d'informations. Aujourdhui principalement utilisée dans sa déclinaison pour la conception de structure de données relationnel es.

 SaaS : Le SaaS, ou Software (Logiciel) en tant que Service, est un modèle de distribution de logiciel uniquement accessible via un navigateur web, en ligne. Les SaaS sont hébergées par léditeur, et les accès au logiciel sont souvent conditionnés par un système d'abonnement et de création de compte utilisateur.

 VPS : pour virtual private server ou serveur virtuel privé.

 Packaging (dun modèle dintel igence artificiel e) : Cest laction de transformation dun modèle en un format dexécution générique et auto-suffisant (embarquant les dépendances et données nécessaires à lexécution du modèle). Cette opération est menée à laide doutils dédiés comme ONNX ou encore Docker.

 Mocks, fixtures : Ce sont essentiel ement des initialiseurs personnalisés pour simplifier la construction des dépendances nécessaires aux tests.

 MLOps : Le MLOps est une pratique qui établit des règles de col aboration entre les concepteurs/développeurs et les opérateurs des infrastructures informatiques.

 N-tiers : En génie logiciel, l'architecture à plusieurs niveaux (souvent appelée architecture n-tiers) ou architecture multicouche est une architecture client-serveur dans laquel e les fonctions de présentation, de traitement des applications et de gestion des données sont physiquement séparées.

 Serverless : Il sagit dun modèle d'exécution de l'informatique dans le Cloud dans lequel le fournisseur de services Cloud fait fonctionner le serveur et gère dynamiquement l'al ocation des ressources de la machine.

 Model-vue-contrôleur : Le modèle-vue-contrôleur (généralement connu sous le nom de MVC) est un modèle de conception de logiciel couramment utilisé qui divise la logique de programme correspondante en trois éléments interconnectés.

 Micro-services : L'architecture de micro-services organise une application comme une col ection de services indépendants.

 Back-end : Il sagit de la couche serveur dune application.

 Front-end : Il sagit des couches visibles dune application, dont les interfaces.

 Déployer/déploiement : action ou processus de mise en ligne / en production dun programme, dune application.

 OpenAPI : OpenAPI est une norme de description des interfaces de programmation. OpenAPI encadre le développement et la documentation des API conformes à larchitecture REST.

 BaaS : il sagit dun modèle de service cloud dans lequel les développeurs externalisent tous les aspects génériques dun back-end d'une application web ou mobile (authentification, comptes utilisateurs, notifications) afin de concentrer leffort sur la valeur ajoutée du produit.

Page 24 / 25

 Feedback loop : désigne le processus par lequel les résultats prédits d'un modèle d'intel igence artificiel e sont réutilisés pour former de nouvel es versions du modèle.

Page 25 / 25


